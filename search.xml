<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Thinkphp3.2.3汽车租赁信息企业官网]]></title>
    <url>%2FThinkphp3-2-3%E6%B1%BD%E8%BD%A6%E7%A7%9F%E8%B5%81%E4%BF%A1%E6%81%AF%E4%BC%81%E4%B8%9A%E5%AE%98%E7%BD%91.html</url>
    <content type="text"><![CDATA[PC端演示： 移动端演示：]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>Thinkphp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vue仿去哪儿网详情页Bug修复]]></title>
    <url>%2FVue%E4%BB%BF%E5%8E%BB%E5%93%AA%E5%84%BF%E7%BD%91%E7%9A%84Bug%E4%BF%AE%E5%A4%8D.html</url>
    <content type="text"><![CDATA[跟着某课网的视频一路敲下去到了详情页开发结束后发现之前的Header渐隐渐现效果失效了！！我于是打开视频查看代码跟自己的比较一遍，检查发现没有区别接着面向百度搜索问题，果然其他的同学也遇到了相同的问题 无奈我是网上找的学习资源😑😑 经过几分钟的详尽搜索之后终于被我找到一个实用的解决办法那就是把Header.vue下面的 123456 activated () &#123; window.addEventListener('scroll', this.handleScroll) &#125;,deactivated () &#123; window.removeEventListener('scroll', this.handleScroll) &#125; 改为：123456mounted () &#123; window.addEventListener('scroll', this.handleScroll) &#125;, unmounted () &#123; window.removeEventListener('scroll', this.handleScroll) &#125; 查看效果]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vue去#号美化Url]]></title>
    <url>%2FVue%E5%8E%BB-%E5%8F%B7%E7%BE%8E%E5%8C%96Url.html</url>
    <content type="text"><![CDATA[vue中去掉url地址栏中的#符号1.首先在路由index.js中开启history模式12mode: 'history',base: '/travel/',//这个是我重新定义过的项目名称 2.配置后端服务器文件(这里我以Apache为例) 在根目录新建.htaccess文件在Windows新建这种没有后缀名的文件一般我都是新建txt然后另存为的时候文件名用英文的双引号括起来这样就可以保存成功了。 往.htaccess文件中写入 12345678&lt;IfModule mod_rewrite.c&gt;RewriteEngine OnRewriteBase /travelRewriteRule ^index\.html$ - [L]RewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteRule . /travel/index.html [L]&lt;/IfModule&gt; 到这里就算完成了，不过你的服务器就不再返回 404 错误页面，因为对于所有路径都会返回 index.html 文件，我的做法是在路由配置最下面加一条通配路由让它返回首页注意这条一定要写在所有路由的最下方 1234&#123; path: '*', redirect: '/'&#125; 亲测有效！！无论怎么刷新都不会报404了ヾ(๑╹◡╹)ﾉ” 其他服务器的配置详情请参考-&gt;https://router.vuejs.org/zh/guide/essentials/history-mode.html]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Next自定义Css样式]]></title>
    <url>%2FHexo-Next%E8%87%AA%E5%AE%9A%E4%B9%89Css%E6%A0%B7%E5%BC%8F.html</url>
    <content type="text"><![CDATA[在查看这篇文章之前首先你要有一点点Html+Css的基础 在浏览器按F12查看你想修改的class名，这里我以tag页面的tag-cloud-tags做演示 选好它的样式名称后，到站点目录\themes\next\source\css\_custom\custom.styl这个文件就是专门用来自定义你喜欢的Css样式的。 把你想修改的内容追加到这里 这里的样式会覆盖原先main.css里的 我修改的代码如下： 注意不要直接在站点目录\public\css\mian.css里更改样式，一旦hexo clean后，修改的样式就会被清除，这样就没效果了 要修改成彩色标签云还有一点要做的就是在themes/next/layout/page.swig里找到1&#123;&#123; tagcloud(&#123;min_font: 18, max_font: 55, amount: 300, color: true, start_color: &apos;#c6948e&apos;, end_color: &apos;#FC6470&apos;&#125;) &#125;&#125; 这一行改一下起始颜色和结束颜色最大字体和最小字体也可以改改，我贴上去的是已经修改过的了最后，执行命令 hexo cl &amp; hexo g &amp; hexo s(线上是d) 预览看看效果吧]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>Next</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo添加Live2D模型插件]]></title>
    <url>%2FHexo%E6%B7%BB%E5%8A%A0Live2D%E6%A8%A1%E5%9E%8B%E6%8F%92%E4%BB%B6.html</url>
    <content type="text"><![CDATA[Hexo+next添加live2d插件动画正确指南1.首先在站点根目录执行1npm install --save hexo-helper-live2d 2.在hexo的配置文件_config.yml，注意是hexo的站点配置文件_config.yml而不是主题next下的_config.yml，添加：1234567891011121314151617#注意缩进，这段的代码就是正确的了live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-shizuku display: position: right width: 150 height: 300 mobile: show: true 3.在https://huaji8.top/post/live2d-plugin-2.0/ 选择一个你喜欢的模型的名字复制，然后在根目录下执行Git命令1npm install live2d-widget-model-你刚复制的名字 4.再回到刚才那段配置文件的代码把model里use那句改改12model: use: live2d-widget-model-你刚复制的名字 5.最后执行命令,如果是本地的话就是这句1hexo cl &amp; hexo g &amp; hexo s 如果是部署上线的话就是这句1hexo cl &amp; hexo g &amp; hexo d 现在你就可以打开看看看看效果啦(๑╹◡╹)ﾉ”””]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo发布小技巧]]></title>
    <url>%2Fhexo%E5%8F%91%E5%B8%83%E5%B0%8F%E6%8A%80%E5%B7%A7.html</url>
    <content type="text"><![CDATA[Hexo本地同步线上命令1hexo cl &amp; hexo g &amp; hexo d 一行就能实现，轻松快捷🎉]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SoundCloud下载]]></title>
    <url>%2FSoundCloud%E4%B8%8B%E8%BD%BD.html</url>
    <content type="text"><![CDATA[帮下SoundCloud代下SC里的歌，有些收费的下不了除外😊下方评论留下链接or歌名or歌手并附上邮箱觉得评论留邮箱会暴露隐私的话可以点右下↘私聊我😁————————打赏请随意（非硬性）]]></content>
      <categories>
        <category>SoundCloud</category>
      </categories>
      <tags>
        <tag>助人为乐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
